<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Transferring data on Grex</title><link>https://um-grex.github.io/grex-docs/connecting/data-transfer/</link><description>Recent content in Transferring data on Grex</description><generator>Hugo</generator><language>en</language><copyright>The MIT License (MIT) Copyright © 2023 UM-Grex</copyright><atom:link href="https://um-grex.github.io/grex-docs/connecting/data-transfer/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Globus on Grex</title><link>https://um-grex.github.io/grex-docs/connecting/data-transfer/globus/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/connecting/data-transfer/globus/</guid><description>&lt;h2 id='introduction'>Introduction&lt;a href='#introduction' class='anchor'>#&lt;/a>
&lt;/h2>&lt;hr>
&lt;p>&lt;a
 href="https://docs.globus.org/"
 class="is-pretty-link">Globus&lt;/a
>
 is a service for fast, reliable, secure file transfer. Designed specifically for researchers, Globus has an easy-to-use interface with background monitoring features that automate the management of file transfers between any two resources, whether they are on a supercomputing facility, a campus cluster, lab server, desktop or laptop. Globus improves transfer performance over other file transfer tools, like rsync, scp, and sftp, by automatically tuning transfer settings, restarting interrupted transfers, and checking file integrity.&lt;/p></description></item><item><title>Data transfers for OpenStack Object Storage</title><link>https://um-grex.github.io/grex-docs/connecting/data-transfer/object-storage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/connecting/data-transfer/object-storage/</guid><description>&lt;h2 id='what-is-object-storage'>What is Object Storage&lt;a href='#what-is-object-storage' class='anchor'>#&lt;/a>
&lt;/h2>&lt;hr>
&lt;p>Object storage is a storage technology that allows large amounts of data to be stored as “objects.” This differs from a traditional POSIX-compliant filesystem, which organizes data as randomly accessible “files” and “directories” on block-based storage. Object storage enables access to entire objects only (for loading, storing, or retrieving). Each object contains the data itself (e.g., a photo, video, or document), metadata that describes the object, and a unique identifier used to retrieve it. Access to the content inside an object is typically handled by client software.&lt;/p></description></item><item><title>Connecting to OneDrive using Rclone</title><link>https://um-grex.github.io/grex-docs/connecting/data-transfer/one-drive/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/connecting/data-transfer/one-drive/</guid><description>&lt;h2 id='um-onedrive'>UM OneDrive&lt;a href='#um-onedrive' class='anchor'>#&lt;/a>
&lt;/h2>&lt;hr>
&lt;p>The University of Manitoba provides &lt;a
 href="https://www.microsoft.com/en-ca/microsoft-365/onedrive/onedrive-for-business"
 class="is-pretty-link">Microsoft OneDrive&lt;/a
>
 to its users as part of the Microsoft Office 365 contract.
While not suited, for performance reasons, for online computation work or for storing large datasets, OneDrive can be a useful storage space to store important data of smaller size, documents, articles and such.
It also offers some data preservation features like data recovery and data history.&lt;/p>
&lt;blockquote>
&lt;p>Please also refer to &lt;a
 href="https://umanitoba.ca/information-services-technology/sites/information-services-technology/files/2022-05/data-security-classification.pdf"
 class="is-pretty-link">UM Data Security Classification&lt;/a
>
 to learn which kinds of data can be stored where.&lt;/p></description></item></channel></rss>