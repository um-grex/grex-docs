<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software on Grex</title><link>https://um-grex.github.io/grex-docs/categories/software/</link><description>Recent content in Software on Grex</description><generator>Hugo</generator><language>en</language><copyright>The MIT License (MIT) Copyright © 2025 UM-Grex</copyright><atom:link href="https://um-grex.github.io/grex-docs/categories/software/index.xml" rel="self" type="application/rss+xml"/><item><title>Running Quantum Espresso on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/espresso/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/espresso/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://www.quantum-espresso.org"
 class="is-pretty-link"&gt;Quantum ESPRESSO&lt;/a
&gt;
 is an integrated suite of computer codes for electronic-structure calculations and materials modeling at the nanoscale. It is based on density-functional theory, plane waves, and pseudopotentials (both norm-conserving and ultrasoft).&lt;/p&gt;
&lt;h2 id='system-specific-notes'&gt;System specific notes&lt;a href='#system-specific-notes' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;On the Grex&amp;rsquo;s default software stack (&lt;em&gt;SBEnv&lt;/em&gt;), Espresso is built using a variety of compilers and Open MPI&lt;/p&gt;
&lt;p&gt;To find out which versions are available, use &lt;strong&gt;module spider espresso&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For a version 7.3.1, the following modules should be loaded:&lt;/p&gt;</description></item><item><title>Running Gaussian on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/gaussian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/gaussian/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="http://gaussian.com/"title="Gaussian" id="gaussian"
 class="is-pretty-link"&gt;Gaussian 16&lt;/a
&gt;
 is a comprehensive suite for electronic structure modeling using &lt;strong&gt;ab-initio&lt;/strong&gt;, DFT and semi-empirical methods. A list of Gaussian 16 features can be found &lt;a
 href="http://gaussian.com/g16glance/"title="Gaussian Features" id="gaussian-features"
 class="is-pretty-link"&gt;here&lt;/a
&gt;
.&lt;/p&gt;
&lt;h2 id='user-responsibilities-and-access'&gt;User Responsibilities and Access&lt;a href='#user-responsibilities-and-access' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;University of Manitoba has a site license for Gaussian 16 and GaussView. However, it comes with certain license limitations, so access to the code is subject to some license conditions.&lt;/p&gt;
&lt;p&gt;Since, as of now, Compute Canada accounts are a superset of Grex accounts, users will want to initiate getting access by sending an email agreeing to Gaussian conditions to &lt;strong&gt;support@tech.alliancecan.ca&lt;/strong&gt;, confirming that you have read and agree to abide by the following conditions, and mentioning that you&amp;rsquo;d also want to access it on Grex:&lt;/p&gt;</description></item><item><title>Running GROMACS MD package on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/gromacs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/gromacs/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://www.gromacs.org"
 class="is-pretty-link"&gt;GROMACS&lt;/a
&gt;
 (GROningen MAchine for Chemical Simulations) is a molecular dynamics package primarily designed for simulations of proteins, lipids and nucleic acids. GROMACS is one of the fastest and most popular software packages available and can run on CPUs as well as GPUs.&lt;/p&gt;
&lt;h2 id='system-specific-notes'&gt;System specific notes&lt;a href='#system-specific-notes' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;On the Grex&amp;rsquo;s default software stack (&lt;em&gt;SBEnv&lt;/em&gt;), GROMACS is built using a variety of compilers and OpenMPI (4.1 or 5.0 for example).&lt;/p&gt;</description></item><item><title>Running Julia on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/julia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/julia/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://julialang.org/"
 class="is-pretty-link"&gt;Julia&lt;/a
&gt;
 is a programming language that was designed for performance, ease of use and portability. It is available as a module on Grex.&lt;/p&gt;
&lt;h2 id='available-julia-versions'&gt;Available Julia versions&lt;a href='#available-julia-versions' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Presently, binary Julia version &lt;strong&gt;julia/1.11.3&lt;/strong&gt; is available. Use &lt;code&gt;module spider julia&lt;/code&gt; to find out other versions.&lt;/p&gt;
&lt;h2 id='installing-packages'&gt;Installing packages&lt;a href='#installing-packages' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;We do not maintain centralized versions of Julia packages. Users should install Julia modules in their home directory.&lt;/p&gt;
&lt;p&gt;The command is (in Julia REPL):&lt;/p&gt;</description></item><item><title>How to use Jupyter notebooks on Grex?</title><link>https://um-grex.github.io/grex-docs/specific-soft/jupyter-notebook/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/jupyter-notebook/</guid><description>&lt;h1 id='jupyter-on-grex'&gt;Jupyter on Grex&lt;a href='#jupyter-on-grex' class='anchor'&gt;#&lt;/a&gt;
&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://jupyter.org/"
 class="is-pretty-link"&gt;Jupyter&lt;/a
&gt;
 is a Web-interface aimed to support interactive data science and scientific computing. Jupyter supports several dynamic languages, most notably Python, R and Julia. Jupyter offers a metaphor of &amp;ldquo;computational document&amp;rdquo; that combines code, data and visualizations, and can be published or shared with collaborators.&lt;/p&gt;
&lt;p&gt;Jupyter can be used either as a simple, individual notebook or as a multi-user Web server/Interactive Development Environment (IDE), such as JupyterHub/JupyterLab. The JupyterHub servers can use a variety of computational back-end configurations: from free-for-all shared workstation to job spawning interfaces to HPC schedulers like SLURM or container workflow systems like Kubernetes.&lt;/p&gt;</description></item><item><title>Running LAMMPS on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/lammps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/lammps/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://www.lammps.org/"
 class="is-pretty-link"&gt;LAMMPS&lt;/a
&gt;
 is a classical molecular dynamics code. The name stands for Large-scale Atomic / Molecular Massively Parallel Simulator. LAMMPS is distributed by Sandia National Laboratories, a US Department of Energy laboratory.&lt;/p&gt;
&lt;h2 id='modules'&gt;Modules&lt;a href='#modules' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;On the Grex’s default software stack (SBEnv), LAMMPS was built using a variety of compilers and OpenMPI 4.1&lt;/p&gt;
&lt;p&gt;To find out which versions are available, use &lt;strong&gt;module spider lammps&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As an example of the version 2024 Aug 29 patch 1, using GCC:&lt;/p&gt;</description></item><item><title>General Linux tools</title><link>https://um-grex.github.io/grex-docs/software/general-linux/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/general-linux/</guid><description>&lt;h2 id='linux-tools-on-grex'&gt;Linux tools on Grex&lt;a href='#linux-tools-on-grex' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;There are a number of general and distro-specific tools on Grex that are worth mentioning here. Such tools are: &lt;strong&gt;text editors&lt;/strong&gt;, &lt;strong&gt;image viewers&lt;/strong&gt;, &lt;strong&gt;file managers&lt;/strong&gt;, &amp;hellip; etc.&lt;/p&gt;
&lt;h2 id='command-line-text-editors'&gt;Command line Text editors&lt;a href='#command-line-text-editors' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Command line text editors allow you to edit files right on Grex in any terminal session (such as SSH session or an X terminal under OOD):&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;The (arguably) most popular editor is &lt;strong&gt;vi&lt;/strong&gt;, or &lt;strong&gt;vim&lt;/strong&gt;. It is very powerful, but requires some experience to use it. To exit a &lt;strong&gt;vim&lt;/strong&gt; session, you can use the &lt;strong&gt;ZZ&lt;/strong&gt; key combination (hold shift key + zz), or &lt;strong&gt;ESC, :x!&lt;/strong&gt;. There are many vi tutorials around, for &lt;a
 href="http://heather.cs.ucdavis.edu/~matloff/UnixAndC/Editors/ViIntro.html"
 class="is-pretty-link"&gt;example this one&lt;/a
&gt;
 or &lt;a
 href="https://learnxinyminutes.com/docs/vim/"
 class="is-pretty-link"&gt;learn VIM in X minutes&lt;/a
&gt;
 .&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Another lightweight text-mode editor is &lt;strong&gt;nano&lt;/strong&gt;. It provides a self-explanatory key-combination menu at the bottom of the screen. An online manual can be found &lt;a
 href="https://www.nano-editor.org/dist/v2.1/nano.html"
 class="is-pretty-link"&gt;here&lt;/a
&gt;
.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A more modern alternative to &amp;ldquo;nano&amp;rdquo; is &lt;strong&gt;micro&lt;/strong&gt; . On Grex it is available only as module (&lt;code&gt;module load micro&lt;/code&gt;) . &lt;strong&gt;micro&lt;/strong&gt; supports syntax coloring for a number of programming languages. The webpage of &lt;a
 href="https://micro-editor.github.io/"
 class="is-pretty-link"&gt;micro&lt;/a
&gt;
 .&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Midnight Commander file manager provides a text-mode editor that can be invoked stand-alone as &lt;strong&gt;mc -e filename&lt;/strong&gt;, or from within &lt;strong&gt;mc&lt;/strong&gt; by using F4 or Edit menu item on a selected file.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;h2 id='gui-text-editors'&gt;GUI Text editors&lt;a href='#gui-text-editors' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;!--
Sometimes it is useful (for example, for copy/paste operations with mouse, between client computer and a remote session) or convenient to have a text editor with a graphical user interface. Note that a most practical way to use this is from X2Go sessions that provide tolerable interaction speeds.
--&gt;
&lt;p&gt;Vi has a GUI counterpart which is accessible as &lt;strong&gt;evim&lt;/strong&gt; command. There are also the following GUI editors: &lt;strong&gt;nedit&lt;/strong&gt; and &lt;strong&gt;xfe-xfw&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>Running MATLAB on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/matlab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/matlab/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="http://www.mathworks.com/"
 class="is-pretty-link"&gt;MATLAB&lt;/a
&gt;
 is a general-purpose high-level programming package for numerical work such as linear algebra, signal processing and other calculations involving matrices or vectors of data. We have a campus license for MATLAB which is used on Grex and other local computing resources. &lt;!-- MATLAB is available only for UManitoba users.--&gt;&lt;/p&gt;
&lt;p&gt;As with most of the Grex software, MATLAB is available as a module. The following command will load the latest version available on Grex:&lt;/p&gt;</description></item><item><title>Running NWChem on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/nwchem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/nwchem/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://nwchemgit.github.io/"
 class="is-pretty-link"&gt;NWChem&lt;/a
&gt;
 is a Scalable, massive parallel and open source solution for large scale molecular simulations. NWChem is actively developed by a consortium of developers and maintained by the EMSL located at the Pacific Northwest National Laboratory (PNNL) in Washington State. The code is distributed as open source under the terms of the Educational Community License version 2.0 (ECL 2.0).&lt;/p&gt;
&lt;h2 id='system-specific-notes'&gt;System specific notes&lt;a href='#system-specific-notes' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;To find out which versions of NWChem are available, use &lt;strong&gt;module spider nwchem&lt;/strong&gt; .&lt;/p&gt;</description></item><item><title>Running ORCA on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/orca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/orca/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="http://cec.mpg.de/forum/"
 class="is-pretty-link"&gt;ORCA&lt;/a
&gt;
 is a flexible, efficient and easy-to-use general purpose tool for quantum chemistry with specific emphasis on spectroscopic properties of open-shell molecules. It features a wide variety of standard quantum chemical methods ranging from semi-empirical methods to DFT to single - and multi-reference correlated ab initio methods. It can also treat environmental and relativistic effects.&lt;/p&gt;
&lt;h2 id='user-responsibilities-and-access'&gt;User Responsibilities and Access&lt;a href='#user-responsibilities-and-access' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;ORCA is a proprietary software, even if it is free it still requires you to agree to the ORCA license conditions. We have installed ORCA on Grex, but to access the binaries, each of the ORCA users has to confirm they have accepted the license terms.&lt;/p&gt;</description></item><item><title>Running R on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/r-program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/r-program/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://www.r-project.org/"
 class="is-pretty-link"&gt;R&lt;/a
&gt;
 is a system for statistical computation and graphics. It consists of a language plus a runtime environment with graphics, a debugger, access to certain system functions, and the ability to run programs stored in script files.&lt;/p&gt;
&lt;h2 id='available-r-versions'&gt;Available R versions&lt;a href='#available-r-versions' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Multiple versions of R are available. Use &lt;code&gt;module spider r&lt;/code&gt; to find out the different versions of R:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;~@yak ~&lt;span style="color:#f92672"&gt;]&lt;/span&gt;$ module spider r
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r/4.4.1+aocl-4.2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r/4.4.1+mkl-2019.5
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r/4.4.1+mkl-2024.1
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r/4.5.0+mkl-2024.1
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; r/4.5.0+openblas-0.3.28&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To see how to load a particular version, run the command &lt;code&gt;module spider r/&amp;lt;version&amp;gt;&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>Running VASP on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/vasp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/vasp/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://www.vasp.at/wiki/index.php/The_VASP_Manual"
 class="is-pretty-link"&gt;VASP&lt;/a
&gt;
 is a massively parallel plane-wave solid state DFT code. On Grex, it is available only for the research groups that hold VASP licenses. To get access, PIs would need to send us a confirmation email from the VASP vendor, detailing the status of their license and a list of users allowed to use it.&lt;/p&gt;
&lt;h2 id='system-specific-notes'&gt;System specific notes&lt;a href='#system-specific-notes' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;!--On the Grex local software stack, we have VASP 5 and VASP 6 using Intel compiler and OpenMPI 3.1.--&gt; 
&lt;p&gt;To find out which versions of VASP are available, use &lt;code&gt;module spider vasp&lt;/code&gt; .&lt;/p&gt;</description></item><item><title>Modules and software stacks</title><link>https://um-grex.github.io/grex-docs/software/using-modules/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/using-modules/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;!--
&lt;div class="sc-collapsible-container"&gt;
 &lt;div class="sc-collapsible-header"&gt;Modules allow for clean and dynamic modification of the user&amp;#39;s Linux session environment&lt;/div&gt;
 &lt;div class="sc-collapsible-content"&gt;&lt;/div&gt;
&lt;/div&gt;

--&gt;
&lt;p&gt;On a Linux server or a Linux desktop, software can be installed in one of the standard locations, such as &lt;em&gt;/usr/bin&lt;/em&gt;. This is where most of the system-level software binaries can be found. For custom user-built software, it is a good practice to install it separately from the standard location, to avoid potential conflicts and make changes and uni-installation possible. One of the common locations would be under &lt;em&gt;/usr/local/&lt;/em&gt;, as in &lt;em&gt;/usr/local/My_Custom_software/&lt;/em&gt; , or under &lt;em&gt;/opt&lt;/em&gt; (&lt;em&gt;/opt/My_Other_custom_software&lt;/em&gt;).&lt;/p&gt;</description></item><item><title>Using Python for ML on Grex</title><link>https://um-grex.github.io/grex-docs/specific-soft/python-ai/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/python-ai/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Python is a dynamic language with many optional Library &amp;ldquo;modules&amp;rdquo; available. Moreover, Python is often used as a &amp;ldquo;glue&amp;rdquo; language for interacting with tools and libraries written in other languages (C/C++, Fortran, CUDA, etc.).
This makes maintenance of Python software difficult. Not only do Python and libraries need to be of the right versions, but also other software they depend on should be of the same versions that have been used to build the corresponding packages.&lt;/p&gt;</description></item><item><title>Code Development on Grex</title><link>https://um-grex.github.io/grex-docs/software/code-development/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/code-development/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Grex comes with a sizable software stack that contains most of the software development environment for typical HPC applications. This section of the documentation covers best practices for compiling and building your own software on Grex.&lt;/p&gt;
&lt;p&gt;On Grex, login nodes can be used to compile software and to run short interactive and/or test runs. All other jobs must be submitted to the &lt;a
 href="https://um-grex.github.io/grex-docs/running-jobs/batch-jobs/"
 class="is-pretty-link"&gt;batch&lt;/a
&gt;
 system. User sessions on the login nodes are limited by &lt;em&gt;cgroups&lt;/em&gt; to prevent resource congestion. Thus, it sometimes makes sense to perform some of the code development in interactive jobs, in cases such as (but not limited to):&lt;/p&gt;</description></item><item><title>Containers for Software</title><link>https://um-grex.github.io/grex-docs/software/containers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/containers/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;Linux Containers are means to isolate software dependencies from the base Linux operating system (OS). Several different Linux container engines exist, most notably &lt;a
 href="https://www.docker.com"
 class="is-pretty-link"&gt;Docker&lt;/a
&gt;
 which was first to emerge as the most popular tool in the DevOps community.&lt;/p&gt;
&lt;p&gt;Since then, a lot of work had been done by major Linux players like Google, RedHat and others to develop an open standard for container runtimes, which developed based on Docker, &lt;a
 href="https://opencontainers.org/"
 class="is-pretty-link"&gt;OCI&lt;/a
&gt;
.&lt;/p&gt;</description></item><item><title>CVMFS and the Alliance software stack</title><link>https://um-grex.github.io/grex-docs/software/cern-vmfs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/cern-vmfs/</guid><description>&lt;h2 id='cc-cernvmfs-on-grex'&gt;CC CernVMFS on Grex&lt;a href='#cc-cernvmfs-on-grex' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://cernvm.cern.ch/portal/filesystem"
 class="is-pretty-link"&gt;CVMFS or CernVM FS&lt;/a
&gt;
 stands for CernVM File System. It provides a scalable, reliable and low-maintenance software distribution service. CVMFS was originally developed to assist High Energy Physics (HEP) collaborations to deploy software on the worldwide-distributed computing infrastructure used to run data processing applications. Since then it has been used as a a generic way of distributing software.
Presently, we use CernVMFS (CVMFS) to provide the Alliance&amp;rsquo;s (or Compute Canada&amp;rsquo;s) software stack. Through the Alliance CVMVS servers, several other publically available CVMFS software repositories are available as well.
The examples are a Singularity/Apptainer repository from &lt;a
 href="https://opensciencegrid.org/"title="OpenScienceGrid" id="opensciencegrid"
 class="is-pretty-link"&gt;OpenScienceGrid&lt;/a
&gt;
, Extreme-Scale Scientific Software Stack &lt;a
 href="https://e4s-project.github.io/"
 class="is-pretty-link"&gt;E4S&lt;/a
&gt;
, and a Genomics software colection (GenPipes/MUGQIC) from &lt;a
 href="https://computationalgenomics.ca/"
 class="is-pretty-link"&gt;C3G&lt;/a
&gt;
. Note that we can only &amp;ldquo;pull&amp;rdquo; the software from these repositories. To actually add or change software, datasets, etc., or receive support, the respective organizations controlling these CVMFS repositories should be contacted directly.&lt;/p&gt;</description></item><item><title>List of Software in SBEnv environment</title><link>https://um-grex.github.io/grex-docs/software/software-list/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/software-list/</guid><description>&lt;h2 id='software-available-on-the-ccenv-software-stack-on-grex'&gt;Software available on the CCEnv software stack on Grex.&lt;a href='#software-available-on-the-ccenv-software-stack-on-grex' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Grex receives the ComputeCanada/Alliance software environment via CVMFS. Full autogenerated list of software is available at the &lt;a
 href="https://docs.alliancecan.ca/wiki/Available_software"
 class="is-pretty-link"&gt;Available Software page&lt;/a
&gt;
 on the Allince Documentation Wiki.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that Grex does not install local, commercial software licensed only to the National/Alliance systems. The software listed under &amp;ldquo;List of globally-installed modules&amp;rdquo; is available.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id='software-available-on-the-sbenv-software-stack-on-grex'&gt;Software available on the SBEnv software stack on Grex.&lt;a href='#software-available-on-the-sbenv-software-stack-on-grex' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;p&gt;Below is the auto-generated list of software modules available on Grex&amp;rsquo;s local SBEnv software stack.&lt;/p&gt;</description></item><item><title>Running jobs on Grex</title><link>https://um-grex.github.io/grex-docs/running-jobs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/running-jobs/</guid><description>&lt;h2 id='why-running-jobs-in-batch-mode'&gt;Why running jobs in batch mode?&lt;a href='#why-running-jobs-in-batch-mode' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;There are many reasons for adopting a batch mode for running jobs on a cluster. From providing user&amp;rsquo;s computations with fairness, traffic control to prevent resource congestion and wasting, enforcing organizational priorities, to better understanding the workload, utilization and resource needs for future capacity planning; the scheduler provides it all. After being long-time PBS/Moab users, we have switched to the &lt;a
 href="https://slurm.schedmd.com/documentation.html"
 class="is-pretty-link"&gt;SLURM&lt;/a
&gt;
 batch system since &lt;strong&gt;December 2019&lt;/strong&gt; with the &lt;strong&gt;Linux/SLURM update&lt;/strong&gt; &lt;a
 href="https://um-grex.github.io/grex-docs/changes/linux-slurm-update/"
 class="is-pretty-link"&gt;project&lt;/a
&gt;
.&lt;/p&gt;</description></item><item><title>Software and Applications</title><link>https://um-grex.github.io/grex-docs/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/software/</guid><description>&lt;h2 id='software'&gt;Software&lt;a href='#software' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;!--
In the HPC world, software is more often meant as codes that do some scientific or engineering computation, data processing and visualization (as opposed to web services, relational databases, client-server business systems, email and office, ... etc.)
Tools and libraries used to develop HPC software are also software, and have several best practices associated with them. Some of that will be covered below. Without means to provide software to do computations, HPC systems would be rather useless.
Fortunately, most HPC systems, and Grex is no exception, come with a pre-installed, curated software stack. This section covers how to find the installed software, how to access it, and what options you have if some of the software you need is missing.
--&gt;
&lt;p&gt;In HPC, &amp;ldquo;software&amp;rdquo; typically refers to scientific and engineering codes for computation, data processing, and visualization -— rather than common business IT applications like web services or email clients. Without software to run workloads, HPC systems would be of little use. Development tools and libraries used to build HPC applications are also considered to be &amp;ldquo;software&amp;rdquo;.&lt;/p&gt;</description></item><item><title>Software Specific Notes</title><link>https://um-grex.github.io/grex-docs/specific-soft/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/specific-soft/</guid><description>&lt;h2 id='software-specific-notes'&gt;Software specific notes&lt;a href='#software-specific-notes' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;This page refers to the usage of some specific programs installed on Grex, like ORCA, VASP, &amp;hellip; etc.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id='software--applications'&gt;Software / Applications&lt;a href='#software--applications' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;div class="sc-treeview"&gt;&lt;ul
 &gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/espresso/"
 class="is-pretty-link"
 &gt;Espresso&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/gaussian/"
 class="is-pretty-link"
 &gt;Gaussian&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/gromacs/"
 class="is-pretty-link"
 &gt;GROMACS&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/julia/"
 class="is-pretty-link"
 &gt;Julia&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/jupyter-notebook/"
 class="is-pretty-link"
 &gt;Jupyter notebooks&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/lammps/"
 class="is-pretty-link"
 &gt;LAMMPS&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/matlab/"
 class="is-pretty-link"
 &gt;MATLAB&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/nwchem/"
 class="is-pretty-link"
 &gt;NWChem&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/orca/"
 class="is-pretty-link"
 &gt;ORCA&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/r-program/"
 class="is-pretty-link"
 &gt;R&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/vasp/"
 class="is-pretty-link"
 &gt;VASP&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;li class=""&gt;
 &lt;div class="sc-treeview-label"&gt;&lt;p class="is-marginless"&gt;
 &lt;a
 href="https://um-grex.github.io/grex-docs/specific-soft/python-ai/"
 class="is-pretty-link"
 &gt;Python for ML&lt;/a
 &gt;
 &lt;/p&gt;
 &lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;

&lt;h2 id='external-links'&gt;External links&lt;a href='#external-links' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
 href="https://docs.alliancecan.ca/wiki/Running_jobs"
 class="is-pretty-link"&gt;Running jobs&lt;/a
&gt;
 (on the Alliance&amp;rsquo;s clusters)&lt;/li&gt;
&lt;li&gt;&lt;a
 href="https://slurm.schedmd.com/documentation.html"
 class="is-pretty-link"&gt;SLURM&lt;/a
&gt;
 documentation.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;!-- Changes and update:
* Last revision: Apr 11, 2025. 
--&gt;</description></item><item><title>OpenOnDemand, HPC Portal</title><link>https://um-grex.github.io/grex-docs/ood/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://um-grex.github.io/grex-docs/ood/</guid><description>&lt;h2 id='introduction'&gt;Introduction&lt;a href='#introduction' class='anchor'&gt;#&lt;/a&gt;
&lt;/h2&gt;&lt;hr&gt;
&lt;p&gt;&lt;a
 href="https://openondemand.org/"title="OpenOnDemand" id="openondemand"
 class="is-pretty-link"&gt;OpenOnDemand&lt;/a
&gt;
 or &lt;strong&gt;OOD&lt;/strong&gt; for short, is an open source Web portal for High-Performance computing, developed at Ohio Supercomputing Center. OOD makes it easier for beginner HPC users to access the resources via a Web interface. OOD also allows for interactive, visualization and other Linux Desktop applications to be accessed on HPC systems via a convenient Web user interface.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Since the end of &lt;strong&gt;October 2021&lt;/strong&gt;, OpenOnDemand version 2 is officially in production on Grex.&lt;/li&gt;
&lt;li&gt;Since the beginning of &lt;strong&gt;January 2023&lt;/strong&gt;, OpenOnDemand version 3 is officially in production on Grex.&lt;/li&gt;
&lt;li&gt;Since the beginning of &lt;strong&gt;February 2025&lt;/strong&gt;, OpenOnDemand version 4 is officially in production on Grex.&lt;/li&gt;
&lt;/ul&gt;&lt;/blockquote&gt;
&lt;p&gt;For more general OOD information, see the &lt;a
 href="https://joss.theoj.org/papers/10.21105/joss.00622"title="OpenOnDemand Paper" id="openondemand-paper"
 class="is-pretty-link"&gt;OpenOnDemand paper&lt;/a
&gt;
&lt;/p&gt;</description></item></channel></rss>