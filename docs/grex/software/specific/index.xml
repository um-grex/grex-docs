<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software-specific notes on Unofficial Grex User Guide</title><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/</link><description>Recent content in Software-specific notes on Unofficial Grex User Guide</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://um-grex.github.io/grex-docs/docs/grex/software/specific/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/gaussian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/gaussian/</guid><description>Gaussian Introduction Gaussian 16 is a comprehensive suite for electronic structure modeling using ab initio, DFT and semi-empirical methods. A list of Gaussian 16 features can be found here .
User Responsibilities and Access University of Manitoba has a site license for Gaussian 16 and GaussView. However it comes with certain license limitations, so access to the code is subject to some license conditions.
Since, as of now, Compute Canada accounts are a superset of Grex accounts, users will want to initiate getting access by sendiong email agreeing to Gaussian conditions to support@computecanada.</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/julia/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/julia/</guid><description>Ho to run Julia jobs? Available Julia versions Presently, binary Julia versions 1.3.0, 1.5.4 and 1.6.1 are available. Use module spider julia to find out other versions.
Installing packages We do not maintain centralized versions of Julia packages. User should install Julia modules in their home directory.
The command is (in Julia REPL):
Using Pkg; Pkg.Add(&amp;quot;My-Package&amp;quot;) In case of package/version conflicts, remove the packages directory ~/.julia/.
Using Julia notebooks It is possible to use IJulia kernels for Jupyter notebooks.</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/lammps/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/lammps/</guid><description>LAMMPS Introduction Text Work in progress &amp;hellip;
#!/bin/bash #SBATCH --ntasks=16 #SBATCH --cpus-per-task=1 #SBATCH --mem-per-cpu=1500M #SBATCH --time=0-3:00:00 #SBATCH --job-name=lmp-tst # Load the module: module load intel/2019.5 ompi/3.1.4 lammps/29Sep21 echo &amp;#34;Starting run at: `date`&amp;#34; lmp_exec=lmp_grex lmp_input=&amp;#34;lammps.in&amp;#34; lmp_output=&amp;#34;lammps_lj_output.txt&amp;#34; srun ${lmp_exec} &amp;lt; ${lmp_input} &amp;gt; ${lmp_output} echo &amp;#34;Program finished with exit code $?at: `date`&amp;#34;</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/matlab/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/matlab/</guid><description>Matlab on Grex Introduction MATLAB is a general-purpose high-level programming package for numerical work such as linear algebra, signal processing and other calculations involving matrices or vectors of data. We have a campus license for MATLAB which is used on Grex and other local computing resources. MATLAB is available only for UManitoba users.
As most of the Grex software, MATLAB is available as module. The following command will load the latest version available on Grex:</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/nwchem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/nwchem/</guid><description>NWChem Introduction NWChem is a Scalable open-source solution for large scale molecular simulations. NWChem is actively developed by a consortium of developers and maintained by the EMSL located at the Pacific Northwest National Laboratory (PNNL) in Washington State. The code is distributed as open-source under the terms of the Educational Community License version 2.0 (ECL 2.0).
System specific notes On Grex software stack, NWChem is using OpenMPI 3.1 with Intel compilers toolchains.</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/orca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/orca/</guid><description>ORCA Introduction ORCA is a flexible, efficient and easy-to-use general purpose tool for quantum chemistry with specific emphasis on spectroscopic properties of open-shell molecules. It features a wide variety of standard quantum chemical methods ranging from semiempirical methods to DFT to single - and multireference correlated ab initio methods. It can also treat environmental and relativistic effects.
User Responsibilities and Access ORCA is a proprietary software, even if it is free it still requires you to agree to the ORCA license conditions.</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/priroda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/priroda/</guid><description>Priroda Introduction Priroda is a fast parallel relativistic DFT and ab initio code for molecular modeling, developed by Dr. Dimitri N. Laikov. The code originally implemented fast resolution-of-identity GGA DFT for coulomb and exchange integrals. Later it was extended to provide RI-DFT with hybrid functionals, RI-HF and RI-MP2, and parallel high-level coupled-cluster methods. All these levels of theory can be used together with an efficient all-electron scalar-relativistic method, with small-component bases supplied for all the elements of Periodic Table.</description></item><item><title/><link>http://um-grex.github.io/grex-docs/docs/grex/software/specific/vasp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://um-grex.github.io/grex-docs/docs/grex/software/specific/vasp/</guid><description>VASP Introduction VASP is a massively parallel plane-wave solid state DFT code. On Grex it is available only for the research groups that hold VASP license. To get access, PIs would need to send us a confirmation email from the VASP vendor, detailing status of their license and a list of users allowed to use it.
System specific notes On the Grex local software stack, we have VASP 5 and VASP 6 is using Intel compiler and OpenMPI 3.</description></item></channel></rss>